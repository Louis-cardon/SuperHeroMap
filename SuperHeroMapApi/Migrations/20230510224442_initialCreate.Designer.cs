// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SuperHeroMapApi.Data;

#nullable disable

namespace SuperHeroMapApi.Migrations
{
    [DbContext(typeof(SuperHeroMapContext))]
    [Migration("20230510224442_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SuperHeroMapApi.Models.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IncidentResourceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("boolean");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("IncidentResourceId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.IncidentResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("IncidentResources");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.SuperHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SuperHeroes");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.SuperHeroIncident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IncidentId")
                        .HasColumnType("integer");

                    b.Property<int>("SuperHeroId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.HasIndex("SuperHeroId");

                    b.ToTable("SuperHeroIncidents");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.SuperHeroIncidentResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IncidentResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("SuperHeroId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IncidentResourceId");

                    b.HasIndex("SuperHeroId");

                    b.ToTable("SuperHeroIncidentResources");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.Incident", b =>
                {
                    b.HasOne("SuperHeroMapApi.Models.IncidentResource", "IncidentResource")
                        .WithMany("Incidents")
                        .HasForeignKey("IncidentResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncidentResource");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.SuperHeroIncident", b =>
                {
                    b.HasOne("SuperHeroMapApi.Models.Incident", "Incident")
                        .WithMany("SuperHeroIncidents")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroMapApi.Models.SuperHero", "SuperHero")
                        .WithMany("SuperHeroIncidents")
                        .HasForeignKey("SuperHeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");

                    b.Navigation("SuperHero");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.SuperHeroIncidentResource", b =>
                {
                    b.HasOne("SuperHeroMapApi.Models.IncidentResource", "IncidentResource")
                        .WithMany("SuperHeroIncidentResources")
                        .HasForeignKey("IncidentResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroMapApi.Models.SuperHero", "SuperHero")
                        .WithMany("SuperHeroIncidentResources")
                        .HasForeignKey("SuperHeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncidentResource");

                    b.Navigation("SuperHero");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.Incident", b =>
                {
                    b.Navigation("SuperHeroIncidents");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.IncidentResource", b =>
                {
                    b.Navigation("Incidents");

                    b.Navigation("SuperHeroIncidentResources");
                });

            modelBuilder.Entity("SuperHeroMapApi.Models.SuperHero", b =>
                {
                    b.Navigation("SuperHeroIncidentResources");

                    b.Navigation("SuperHeroIncidents");
                });
#pragma warning restore 612, 618
        }
    }
}
